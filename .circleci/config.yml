version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  vault: jmingtan/hashicorp-vault@0.2.1

executors:
  ubuntu-2004-docker:
    docker:
      - image: ubuntu:20.04
  ubuntu-2004:
    machine:
      image: ubuntu-2004:202010-01
  # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
  macos-1015:
    macos:
      xcode: 12.4.0
  macos-1100:
    macos:
      xcode: 12.5.1

commands:
  install_macos_puppet:
    steps:
      - run:
          name: Install puppet agent and bolt
          command: |
            # Install puppet agent
            curl -s -O https://downloads.puppet.com/mac/puppet/10.15/x86_64/puppet-agent-7.8.0-1.osx10.15.dmg
            hdiutil mount puppet-agent-7.8.0-1.osx10.15.dmg
            sudo -E installer -pkg /Volumes/puppet-agent-7.8.0-1.osx10.15/puppet-agent-7.8.0-1-installer.pkg -target /
            # Install bolt
            curl -s -O https://downloads.puppet.com/mac/puppet/10.15/x86_64/puppet-bolt-3.9.2-1.osx10.15.dmg
            hdiutil mount puppet-bolt-3.9.2-1.osx10.15.dmg
            sudo -E installer -pkg /Volumes/puppet-bolt-3.9.2/puppet-bolt-3.9.2-1-installer.pkg -target /
      - run: /opt/puppetlabs/bolt/bin/gem install vault debouncer
  apt_cache_restore:
    steps:
      - run: mkdir -p /tmp/docker/var/cache/apt
      - run: sudo find /tmp/docker/var/cache/apt -type f -name *.deb | sort > apt_cache_debs_checksum
      - restore_cache:
          keys:
          - v1-apt-cache-{{ arch }}-{{ .Branch }}-{{ checksum "apt_cache_debs_checksum" }}
          - v1-apt-cache-{{ arch }}-{{ .Branch }}-
          - v1-apt-cache-{{ arch }}-
  apt_cache_save:
    steps:
      - run: sudo find /tmp/docker/var/cache/apt -type f -name *.deb | sort > apt_cache_debs_checksum
      - save_cache:
          paths:
            - /tmp/docker/var/cache/apt
          key: v1-apt-cache-{{ arch }}-{{ .Branch }}-{{ checksum "apt_cache_debs_checksum" }}
  gem_cache:
    steps:
      - restore_cache:
          keys:
          # when lock file changes, use increasingly general patterns to restore cache
          - v2-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum ".gemfile.lock" }}
          - v2-gem-cache-{{ arch }}-{{ .Branch }}-
          - v2-gem-cache-{{ arch }}-
      - run:
          name: Bundle Install and forced clean
          command: |
            bundle install
            bundle clean --force
      - save_cache:
          paths:
            - vendor/
          key: v2-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum ".gemfile.lock" }}
  export_env_vars:
    steps:
      - run:
          name: Setup Additional Environment Variables
          command: |
            echo "export BUNDLE_GEMFILE=.gemfile" >> $BASH_ENV
  setup_vault:
    steps:
      - vault/install
      - run: vault version
      - run:
          name: Start vault server in dev mode
          command: vault server -dev -dev-root-token-id="root"
          background: true
      - run: vault status

jobs:
  pre_commit:
    executor: ubuntu-2004
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install shellcheck
      - run: pip3 install pre-commit
      #- run: pre-commit run --all-files --verbose
      - run: git remote add original https://github.com/mozilla-platform-ops/ronin_puppet.git
      - run: git fetch --all
      - run: pre-commit run --from-ref original/master --to-ref HEAD --verbose
  r10k_install:
    executor: ubuntu-2004
    steps:
      - export_env_vars
      - checkout
      - gem_cache
      - run: bundle exec r10k puppetfile install --moduledir=/tmp/r10k_module_test -v --force
  linux_integration_tests:
    executor: ubuntu-2004
    parameters:
      kitchen_target:
        type: string
    steps:
      - export_env_vars
      - checkout
      - gem_cache
      - apt_cache_restore
      - run:
          command: bundle exec kitchen converge << parameters.kitchen_target >>
          no_output_timeout: 30m
      - run: bundle exec kitchen verify << parameters.kitchen_target >>
      - apt_cache_save
    environment:
      KITCHEN_YAML: .kitchen_configs/kitchen.docker.yml
  macos_integration_tests:
    parameters:
      os:
        type: executor
      role:
        type: string
      suite:
        type: string
    executor: << parameters.os >>
    steps:
      - export_env_vars
      - checkout
      - vault/install:
          verify: false
      - setup_vault
      - gem_cache
      - install_macos_puppet
      - run: bundle exec kitchen converge << parameters.suite >>
      - run: bundle exec kitchen verify << parameters.suite >>
    environment:
      KITCHEN_YAML: .kitchen_configs/kitchen.macos.circleci.yml
      PUPPET_ROLE: << parameters.role >>
#      - slack/status:
#          fail_only: false

workflows:
  ci_test:
    jobs:
      - pre_commit
      - r10k_install
      - macos_integration_tests:
          matrix:
            parameters:
              os: [macos-1015, macos-1100]
              suite: ["default"]
              role: ["gecko_t_osx_1015_r8"]
          context: slack-secrets

          #      - linux_integration_tests:
          # matrix:
          #  parameters:
          #    kitchen_target: ["bitbar", "linux"]
